{"remainingRequest":"/home/ekaterina/Projects/diary/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ekaterina/Projects/diary/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ekaterina/Projects/diary/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ekaterina/Projects/diary/frontend/src/components/Shopping.vue?vue&type=template&id=6c6dc4d0&scoped=true&","dependencies":[{"path":"/home/ekaterina/Projects/diary/frontend/src/components/Shopping.vue","mtime":1588168913406},{"path":"/home/ekaterina/Projects/diary/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekaterina/Projects/diary/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ekaterina/Projects/diary/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekaterina/Projects/diary/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}